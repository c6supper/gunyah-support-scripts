# Â© 2022 Qualcomm Innovation Center, Inc. All rights reserved.
#
# SPDX-License-Identifier: BSD-3-Clause

# FROM ubuntu:22.04
ARG REGISTRY
FROM "$REGISTRY"

RUN apt-get update

ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=America/Los_Angeles \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US:en \
    LC_ALL=en_US.UTF-8

# These defaults below are overridden by DOCKER_OPTIONS
ARG USER=test
ARG UID=50000
ARG GID=200

# Setup the user with default docker password (change if required)
RUN groupadd -g "$GID" "$USER" && \
	useradd -m -u "$UID" -g "$GID" -s /bin/bash "$USER" && \
	echo "$USER:1234" | chpasswd && adduser "$USER" sudo

RUN apt-get update && apt-get install -y apt-utils

RUN apt-get install -y \
    software-properties-common \
    build-essential \
    tzdata \
    python3 \
    python3-pip \
    sudo \
    git \
    make \
    gcc \
    g++ \
    ninja-build \
    gcc-aarch64-linux-gnu \
    g++-aarch64-linux-gnu \
    cpio \
    device-tree-compiler \
    wget \
    lsb-release \
# QEMU dependencies
    libglib2.0-dev \
    libfdt-dev \
    libpixman-1-dev \
    zlib1g-dev \
    meson \
# gdb 9.2 dependencies
    libreadline-dev \
    texinfo \
    libexpat1-dev \
    libmpfr-dev \
# Linux dependencies
    bc \
    libssl-dev \
    flex \
    bison \
# Toolchain dependencies
    libz3-dev \
    cmake \
    vim \
    scons \
    gdb-multiarch \
    telnet \
    podman \
    curl \
    fdisk \
    locales \
    chrpath diffstat file gawk lz4 zstd \
# Repos dependencies
    python3-venv

RUN locale-gen en_US.UTF-8  && \
    dpkg-reconfigure locales

ENV HOME="/home/$USER"
RUN mkdir -p  ${HOME} && \
    chown -R $USER:$USER ${HOME} && \
    echo "Creating Docker image for user : $USER"

ENV BASE_DIR="${HOME}"
ENV WORKSPACE="${BASE_DIR}/mnt/workspace"
ENV TOOLS_DIR="/usr/local/mnt/tools"

# Set version, so that we can take action for updates
ARG ENV_VER=""
ENV ENV_VERSION=$ENV_VER

RUN mkdir -p ${BASE_DIR}/utils ${BASE_DIR}/core-utils

# Copy core utils (used to build docker image) files from host machine.
COPY --chown=$USER:$USER ./utils/* "${BASE_DIR}/utils/"
COPY --chown=$USER:$USER ./core-utils/* "${BASE_DIR}/core-utils/"

# Add tools paths to search path
ENV PATH="${PATH}:${BASE_DIR}/utils:${BASE_DIR}/core-utils"

WORKDIR ${BASE_DIR}

## Since all files/dirs created so far are owned by root, change the permissions/owner
RUN touch "${HOME}/.bashrc" && \
    chown -R $USER:$USER "${BASE_DIR}" && \
    ln -s python3 /usr/bin/python

# Switch to user account
USER "$USER"

## Add any volume based environment scripts env updates to .bashrc
RUN echo ""                                           >> "${HOME}/.bashrc" && \
    echo 'if [[ -f ${TOOLS_DIR}/.tools-env ]] ; then' >> "${HOME}/.bashrc" && \
    echo '	source ${TOOLS_DIR}/.tools-env'       >> "${HOME}/.bashrc" && \
    echo '	#echo \"sourced from ${TOOLS_DIR}/.tools-env\"' >> "${HOME}/.bashrc" && \
    echo "fi"                                         >> "${HOME}/.bashrc" && \
    echo                                           "" >> "${HOME}/.bashrc" && \
    echo 'if [[ -f ${WORKSPACE}/.wsp-env ]] ; then'   >> "${HOME}/.bashrc" && \
    echo '	source ${WORKSPACE}/.wsp-env'         >> "${HOME}/.bashrc" && \
    echo '	#echo \"sourced from ${WORKSPACE}/.wsp-env\"' >> "${HOME}/.bashrc" && \
    echo "fi"                                         >> "${HOME}/.bashrc" && \
    echo                                           "" >> "${HOME}/.bashrc"

## Add any .bashrc user customizations to .bashrc
COPY --chown=$USER:$USER bashrc-extn .
RUN cat bashrc-extn >> "${HOME}/.bashrc"  &&  rm -f bashrc-extn

CMD /bin/bash
